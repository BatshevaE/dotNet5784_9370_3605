<Window x:Class="PL.Task.TaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Task"
        mc:Ignorable="d"
        Title="TaskWindow" Height="450" Width="800"
        DataContext="{Binding CurrentTask,RelativeSource={RelativeSource Mode=Self},Mode=TwoWay}" >
    <Window.Resources>
        <!--style for all labels in this window-->
        <Style TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="3" />
            <Setter Property="FontFamily" Value="Sitka Banner" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <!--style for all ComboBoxs in this window-->
        <Style TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="Sitka Banner" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="357*"/>
            <ColumnDefinition Width="43*"/>
        </Grid.ColumnDefinitions>
        <!--Id of Task-->
        <Label Content="Id" Grid.Column="0"  Margin="100,11,100,11"  />
        <TextBox Grid.Column="1" Margin="100,12,57,11" IsEnabled="False" TextWrapping="Wrap" Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"  />

        <!--Name of Task-->
        <Label Content="Name" Grid.Column="0" Grid.Row="1"  Margin="100,12,100,11" />
        <TextBox Grid.Column="1"  Grid.Row="1"  Margin="100,11,57,11" TextWrapping="Wrap"  Text="{Binding Name, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"/>

        <!--Description  of Task-->
        <Label Content="Description" Grid.Column="0" Grid.Row="2"  Margin="100,11,100,11" />
        <TextBox Grid.Column="1" Grid.Row="2"  Margin="100,11,57,11" TextWrapping="Wrap"  Text="{Binding Description, Mode=TwoWay, ValidatesOnExceptions=true}"  />

        <!--Complexity of Task-->
        <Label Content="Complexity" Grid.Column="0" Grid.Row="3"  Margin="100,11,100,11" />
        <ComboBox Grid.Column="1"  Margin="100,11,57,11" Grid.Row="3" ItemsSource="{Binding Source={StaticResource EngineerLevelCollectionKey}}" SelectedValue="{Binding Copmlexity, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

        <!-- Create date of the task-->
        <Label Content="Created Date" Grid.Column="0" Grid.Row="4" Margin="100,12,100,11"/>
        <DatePicker Grid.Column="1" Grid.Row="3"  Margin="0,31,0,0" Text="{Binding CreatedAtDate, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" Grid.RowSpan="2"  />

        <!-- Planned date of the task-->
        <Label Content="Planned Date" Grid.Column="0" Grid.Row="5" Margin="100,12,100,11"/>
        <DatePicker Grid.Column="1" Grid.Row="5"  Margin="100,12,57,11"  Text="{Binding ScheduledDate, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"  />

        <!--  Calculated planned complition  date of the task-->
        <Label Content="Complition Planned Date" Grid.Column="0" Grid.Row="6" Margin="100,12,100,11"/>
        <DatePicker Grid.Column="1" Grid.Row="6"  Margin="100,12,57,11" Text="{Binding ForecastDate, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"  />

        <!-- Latest complit date of the task-->
        <Label Content="DeadLine Date" Grid.Column="0" Grid.Row="7" Margin="100,12,100,11"/>
        <DatePicker Grid.Column="1" Grid.Row="7"  Margin="0,10,57,11" Text="{Binding DeadLineDate, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}"  />

        <!-- Actuall complition date of the task-->
        <Label Content="Actual Complition Date" Grid.Column="0" Grid.Row="8" Margin="100,12,100,11"/>
        <DatePicker Grid.Column="1" Grid.Row="7"  Margin="0,31,0,0" Text="{Binding CompleteDate, Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" Grid.RowSpan="2" Grid.ColumnSpan="2"  />

        <!-- Status of the task-->
        <Label Content="Status" Grid.Column="0" Grid.Row="9" Margin="100,12,100,11"/>
        <ComboBox  Margin="85,30,72,6" Grid.Row="8" ItemsSource="{Binding Source={StaticResource TaskStatusCollectionKey}}" SelectedValue="{Binding Status, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.RowSpan="2" Grid.Column="1"/>

        <!--Riquired effort time  of Task-->
        <Label Content="Required Effort Time" Grid.Column="0" Grid.Row="10"  Margin="100,11,100,11" />
        <TextBox Grid.Column="1" Grid.Row="10"  Margin="100,11,57,11" TextWrapping="Wrap"  Text="{Binding RequiredEffortTime, Mode=TwoWay, ValidatesOnExceptions=true}"  />

        <!--Remarks  of Task-->
        <Label Content="Remarks" Grid.Column="0" Grid.Row="11"  Margin="100,11,100,11" />
        <TextBox Grid.Column="1" Grid.Row="11"  Margin="100,11,57,11" TextWrapping="Wrap"  Text="{Binding Remarks, Mode=TwoWay, ValidatesOnExceptions=true}" />

        <!--Enginner in Task  of Task-->
        <Label Content="Engineer of Task" Grid.Column="0" Grid.Row="12"  Margin="100,11,100,11" />
        <TextBox Grid.Column="1" Grid.Row="12"  Margin="100,11,57,11" TextWrapping="Wrap"  Text="{Binding EngineerTask, Mode=TwoWay, ValidatesOnExceptions=true}"  />

        <!--button of update or add,depends if we get an id(update)or not(add)-->
        <Button Content="{Binding Id, Mode=OneTime, Converter={StaticResource ConverIdToContentKey}}" Height="28" Width="72" HorizontalAlignment="Left" Grid.Row="13" VerticalAlignment="Bottom"  FontWeight="Bold" RenderTransformOrigin="1.198,0.625" Background="{x:Null}" BorderBrush="Black" Foreground="Black" FontSize="20" FontFamily="Sitka Banner" Margin="144,0,0,1" Click="BtnAddOrUpdateTask_Click" />

        <!--button to watch the dependencies of the selected task-->
        <Button Content="watch&#xD;&#xA;Dependencies" Height="28" Width="72" HorizontalAlignment="Left" Grid.Row="13" VerticalAlignment="Center"  FontWeight="Bold" RenderTransformOrigin="1.198,0.625" Background="{x:Null}" BorderBrush="Black" Foreground="Black" FontSize="5" FontFamily="Sitka Banner" Margin="136,0,0,0" Grid.Column="1" Click="BtnDependencyClick" />
        <!--in the line above we binding the name to a class that return wheter the button will be name add or update,depends on the id-->
    </Grid>
</Window>
